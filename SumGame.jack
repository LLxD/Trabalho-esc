class SumGame {
    field boolean hasWon;
    field int diceValue;
    field int newSeed;

    constructor SumGame new() {
        let hasWon = false;
        let diceValue = 0;
        let newSeed = 0;
        return this;
    }

    //TODO
    // PLAYER: NOME, TOMADA DE DECISÃO, ROLAGENS DE DADO
    // JOGO: CAMINHOS, CONCLUSÕES

    // Você está na entrada da ultima torre de Daernaud. 
    // Ela foi construida no deserto de Duanr pelas tribos da colina há eras atrás.
    // Agora, a torre está infestada por vermes gigantes.
    // Em algum lugar dessa torre, está a passagem para a Grande Mina de Eretrusk. 
    // Encontre-a, e garanta que o caminho é seguro para outros te seguirem.

    //SALA -> VERME GIGANTE -> BATALHA (PRA CADA FRACASSO -= 1) OU FUGA (SE FRACASSAR -= 1)
    //Se o jogador vence a batalha com o verme gigante, ele vence o jogo.
    //SALA -> POÇÃO -> VIDA += 1
    //SALA -> ARMADILHA -> VIDA -= 1
    //SALA -> ENTRADA DA MINA -> Vence o jogo.

    method void printPhrase(String phrase){
        do Output.printString(phrase);
        do Output.println();
        return;
    }

    method void play() {
        var Player newPlayer;
        do LCGRandom.setSeed(newSeed);
        let diceValue = LCGRandom.randRange(20);
        do printPhrase("Boas vindas aventureiro(a)");
        do printPhrase("Voce esta na entrada da ultima torre de Daernaud. ");
        do printPhrase("Ela foi construida no deserto de Duanr pelas tribos da colina ha eras atras.");
        do printPhrase("Em algum lugar dessa torre, esta a passagem para a Grande Mina de Eretrusk.");
        do printPhrase("Encontre-a, e garanta que o caminho eh seguro para outros que te seguirem.");
        do printPhrase("No inicio da torre, tres caminhos estao a sua frente");
        do printPhrase("Para onde voce deseja ir?");
        do Output.println();

        do Output.printInt(diceValue);

        while (~(hasWon)) {
                let newSeed = newSeed +1;
                let diceValue = LCGRandom.randRange(20);
                do Output.printInt(diceValue);
        //     newPlayer.pergunta(true,true,true);
        //     if(newPlayer.contadorDireita = 1){
        //         do Output.printString("Voce caminha a direita");
        //         do Output.printString("ARMADILHA");
        //         newPlayer.life = newPlayer.life - 1;
        //         newPlayer.pergunta(true,true,true);
        //     }
        //     if(newPlayer.contadorMeio = 1){
        //         do Output.printString("Voce caminha ao centro");
        //         do Output.printString("POTION");
        //         newPlayer.life = newPlayer.life + 1;
        //     }
        //     if(newPlayer.contadorEsquerda = 1){
        //         do Output.printString("Voce caminha a esquerda");
        //         do Output.printString("nada :(");
        //     }

            let hasWon = true;
        }
        return;
    }


    method void printScore() {
        if(hasWon){
            do printPhrase("VOCE VENCEU O JOGO");
        }
        else{
            do printPhrase("VOCE PERDEU O JOGO");
        }
        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}
